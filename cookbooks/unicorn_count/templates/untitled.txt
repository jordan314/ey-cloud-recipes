#!/bin/bash
#
# This script starts and stops a command in a way that monit can
# monitor it.
# Run the script as follows:
# /usr/local/bin/glassfish_wrapper start|stop
#

COMMAND_NAME="glassfish" # Alpha-numeric characters and underscores only
COMMAND="/opt/glassfish/bin/asadmin start-domain"

CURDIR=`pwd`
PATH=/bin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:$PATH
PID_FILE=/var/run/$COMMAND_NAME.pid
EXEC_LOG_FILE=/var/log/$COMMAND_NAME.log

usage() {
  echo "Usage: $0 {start|stop}"
  exit 1
}

if [ $# -lt 1 ]; then usage; fi

case "$1" in
  start)
    echo "Starting $COMMAND_NAME"
    if [ -f $PID_FILE ]; then
      PID=`cat $PID_FILE`
      if [ -d /proc/$PID ]; then
        echo "$COMMAND_NAME is already running."
        exit 1
      fi
      rm -f $PID_FILE
    fi
    exec $COMMAND 1>$EXEC_LOG_FILE 2>&1 & 
    echo $! > $PID_FILE;
    ;;
  stop)
    GRACE_TIME=${GRACE_TIME:-40}
    echo "Stopping $COMMAND_NAME"
    if [ -f $PID_FILE ]; then
      PID=`cat $PID_FILE`
      kill $PID 2>/dev/null; true
      SLEEP_COUNT=0
      while [ -e /proc/$PID ]; do
        sleep .25
        let "SLEEP_COUNT+=1"
        if(( "$SLEEP_COUNT" > $GRACE_TIME )); then
          echo "Stop wait time exceeded. Killing..."
          kill -9 $PID 2>/dev/null; true
          break
        fi
      done
      rm $PID_FILE
    else
      echo "No PID file found! Cannot stop $COMMAND_NAME"
    fi
    ;;
  *)
    usage
    ;;
      esac
cd $CURDIR